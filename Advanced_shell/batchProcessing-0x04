#!/bin/bash

output_dir="pokemon_data"
mkdir -p "$output_dir"

error_log="errors.txt"
> "$error_log"

pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

fetch_pokemon() {
    local pokemon="$1"
    if curl -s -f "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "$output_dir/${pokemon}.json"; then
        echo "Saved data to $output_dir/${pokemon}.json "
    else
        echo " Failed to fetch data for $pokemon" >> "$error_log"
    fi
}

echo "Fetching Pokémon data in parallel..."

# Launch all jobs in background
for pokemon in "${pokemon_list[@]}"; do
    echo "Fetching data for $pokemon..."
    fetch_pokemon "$pokemon" &
done

# Show current background jobs
echo ""
echo " Current background jobs:"
jobs

# Optional: kill jobs if they exceed a certain time limit (example: 15 seconds)
sleep 15
for job in $(jobs -p); do
    if kill -0 "$job" 2>/dev/null; then
        echo " Job $job took too long — killing..."
        kill "$job"
    fi
done

# Wait for remaining jobs to finish
wait

echo ""
echo " Parallel fetch completed."
echo " Data saved in $output_dir"
echo " Errors (if any) are in $error_log"
